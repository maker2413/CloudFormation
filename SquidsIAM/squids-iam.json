{
    "Description" : "This template deploys necessary IAM polices and Roles",
    "Parameters" : {
	"HostedZone" : {
	    "Description" : "The route53 hosted zone that will be updated by EC2 instances",
	    "Type" : "String",
	    "Default" : ""
	}
    },
    "Resources" : {
	"SquidsEC2Role" : {
	    "Type" : "AWS::IAM::Role",
	    "Properties" : {
		"AssumeRolePolicyDocument": {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Effect" : "Allow",
			    "Principal" : {
				"Service" : [
				    "ec2.amazonaws.com"
				]
			    },
			    "Action" : [
				"sts:AssumeRole"
			    ]
			}
		    ]
		},
		"ManagedPolicyArns" : [
		    "arn:aws:iam::aws:policy/ReadOnlyAccess"
		],
		"Path" : "/",
		"RoleName" : "SquidsEC2Role"
	    }
	},
	"SquidsDevelopers" : {
	    "Type" : "AWS::IAM::Group",
	    "Properties" : {
		"GroupName" : "SquidsDevelopers"
	    }
	},
	"SquidsRoute53Policy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsDNSPolicy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Action" : [
				"route53:ChangeResourceRecordSets",
				"route53:GetHostedZone",
				"route53:ListResourceRecordSets"
			    ],
			    "Resource" : {
				"Fn::Sub" : "arn:aws:route53:::hostedzone/${HostedZone}"
			    },
			    "Effect" : "Allow",
			    "Sid" : "VisualEditor0"
			}, {
			    "Action" : "route53:ListHostedZones",
			    "Resource" : "*",
			    "Effect" : "Allow",
			    "Sid" : "VisualEditor1"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ]
	    }
	},
	"SquidsEC2Policy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsEC2Policy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Action" : [
				"ec2:AllocateAddress",
				"ec2:AllocateHosts",
				"ec2:AssignIpv6Addresses",
				"ec2:AssignPrivateIpAddresses",
				"ec2:AssociateAddress",
				"ec2:AssociateDhcpOptions",
				"ec2:AssociateIamInstanceProfile",
				"ec2:AssociateRouteTable",
				"ec2:AttachInternetGateway",
				"ec2:AttachNetworkInterface",
				"ec2:AttachVolume",
				"ec2:AuthorizeSecurityGroupEgress",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:BundleInstance",
				"ec2:CancelBundleTask",
				"ec2:CancelConversionTask",
				"ec2:CancelExportTask",
				"ec2:CancelSpotInstanceRequests",
				"ec2:ConfirmProductInstance",
				"ec2:CopyImage",
				"ec2:CopySnapshot",
				"ec2:CreateImage",
				"ec2:CreateInstanceExportTask",
				"ec2:CreateInternetGateway",
				"ec2:CreateKeyPair",
				"ec2:CreateNatGateway",
				"ec2:CreateNetworkInterface",
				"ec2:CreatePlacementGroup",
				"ec2:CreateRoute",
				"ec2:CreateRouteTable",
				"ec2:CreateSecurityGroup",
				"ec2:CreateSnapshot",
				"ec2:CreateSpotDatafeedSubscription",
				"ec2:CreateSubnet",
				"ec2:CreateTags",
				"ec2:CreateVolume",
				"ec2:CreateVpc",
				"ec2:CreateVpcEndpoint",
				"ec2:DeleteInternetGateway",
				"ec2:DeleteKeyPair",
				"ec2:DeleteNatGateway",
				"ec2:DeleteNetworkInterface",
				"ec2:DeletePlacementGroup",
				"ec2:CreateRoute",
				"ec2:DeleteRouteTable",
				"ec2:DeleteSecurityGroup",
				"ec2:DeleteSnapshot",
				"ec2:DeleteSpotDatafeedSubscription",
				"ec2:DeleteSubnet",
				"ec2:DeleteTags",
				"ec2:DeleteVolume",
				"ec2:DeleteVpc",
				"ec2:DeleteVpcEndpoints",
				"ec2:DeregisterImage",
				"ec2:DetachInternetGateway",
				"ec2:DetachNetworkInterface",
				"ec2:DetachVolume",
				"ec2:DisassociateAddress",
				"ec2:DisassociateIamInstanceProfile",
				"ec2:DisassociateRouteTable",
				"ec2:EnableVolumeIO",
				"ec2:GetConsoleOutput",
				"ec2:GetPasswordData",
				"ec2:GetReservedInstancesExchangeQuote",
				"ec2:ImportInstance",
				"ec2:ImportKeyPair",
				"ec2:ImportVolume",
				"ec2:ModifyInstanceAttribute",
				"ec2:ModifyInstanceCreditSpecification",
				"ec2:ModifyNetworkInterfaceAttribute",
				"ec2:ModifySnapshotAttribute",
				"ec2:ModifySubnetAttribute",
				"ec2:ModifyVolume",
				"ec2:ModifyVolumeAttribute",
				"ec2:ModifyVpcAttribute",
				"ec2:MonitorInstances",
				"ec2:RebootInstances",
				"ec2:RegisterImage",
				"ec2:ReleaseAddress",
				"ec2:ReplaceIamInstanceProfileAssociation",
				"ec2:ReportInstanceStatus",
				"ec2:RequestSpotInstances",
				"ec2:ResetImageAttribute",
				"ec2:ResetInstanceAttribute",
				"ec2:ResetNetworkInterfaceAttribute",
				"ec2:ResetSnapshotAttribute",
				"ec2:RevokeSecurityGroupEgress",
				"ec2:RevokeSecurityGroupIngress",
				"ec2:RunInstances",
				"ec2:StartInstances",
				"ec2:StopInstances",
				"ec2:TerminateInstances",
				"ec2:UnassignPrivateIpAddresses",
				"ec2:UnmonitorInstances"
			    ],
			    "Resource" : "*",
			    "Effect" : "Allow",
			    "Sid" : "EC2AllowDeveloper"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ],
		"Groups" : [ { "Ref" : "SquidsDevelopers" } ]
	    }
	},
	"SquidsIAMPolicy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsIAMPolicy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Sid" : "VisualEditor0",
			    "Effect" : "Allow",
			    "Action" : [
                                "iam:AttachGroupPolicy",
                                "iam:CreateGroup",
				"iam:CreatePolicy",
				"iam:CreatePolicyVersion",
				"iam:CreateRole",
                                "iam:DeleteGroup",
                                "iam:DeletePolicy",
				"iam:DeletePolicyVersion",
                                "iam:DeleteRole",
                                "iam:DetachGroupPolicy",
				"iam:GetRole",
				"iam:PassRole",
				"iam:PutRolePolicy"
			    ],
			    "Resource" : "*"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ]
	    }
	},
	"SquidsCFTPolicy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsCFTPolicy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Sid" : "VisualEditor0",
			    "Effect" : "Allow",
			    "Action" : [
				"cloudformation:ListStacks",
				"cloudformation:CreateStack",
				"cloudformation:DeleteStack",
				"cloudformation:UpdateStack"
			    ],
			    "Resource" : "*"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ],
		"Groups" : [ { "Ref" : "SquidsDevelopers" } ]
	    }
	},
	"SquidsS3Policy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsS3Policy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Sid" : "VisualEditor0",
			    "Effect" : "Allow",
			    "Action" : [
				"s3:AbortMultipartUpload",
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:DeleteObject",
				"s3:DeleteObjectVersion",
				"s3:GetAccelerateConfiguration",
				"s3:GetBucketAcl",
				"s3:GetBucketCORS",
				"s3:GetBucketLocation",
				"s3:GetBucketLogging",
				"s3:GetBucketNotification",
				"s3:GetBucketPolicy",
				"s3:GetBucketRequestPayment",
				"s3:GetBucketTagging",
				"s3:GetBucketVersioning",
				"s3:GetBucketWebsite",
				"s3:GetEncryptionConfiguration",
				"s3:GetInventoryConfiguration",
				"s3:GetLifecycleConfiguration",
				"s3:GetMetricsConfiguration",
				"s3:GetObject",
				"s3:GetObjectAcl",
				"s3:GetObjectTagging",
				"s3:GetObjectTorrent",
				"s3:GetObjectVersion",
				"s3:GetObjectVersionAcl",
				"s3:GetObjectVersionForReplication",
				"s3:GetObjectVersionTagging",
				"s3:GetObjectVersionTorrent",
				"s3:GetReplicationConfiguration",
				"s3:HeadBucket",
				"s3:ListAllMyBuckets",
				"s3:ListBucket",
				"s3:ListBucketMultipartUploads",
				"s3:ListBucketVersions",
				"s3:ListMultipartUploadParts",
				"s3:ObjectOwnerOverrideToBucketOwner",
				"s3:PutAccelerateConfiguration",
				"s3:PutAnalyticsConfiguration",
				"s3:PutBucketCORS",
				"s3:PutBucketLogging",
				"s3:PutBucketNotification",
				"s3:PutBucketRequestPayment",
				"s3:PutBucketTagging",
				"s3:PutBucketVersioning",
				"s3:PutEncryptionConfiguration",
				"s3:PutInventoryConfiguration",
				"s3:PutLifecycleConfiguration",
				"s3:PutMetricsConfiguration",
				"s3:PutObject",
				"s3:PutObjectAcl",
				"s3:PutObjectTagging",
				"s3:PutObjectVersionAcl",
				"s3:PutObjectVersionTagging",
				"s3:PutReplicationConfiguration",
				"s3:ReplicateDelete",
				"s3:ReplicateObject",
				"s3:RestoreObject",
				"s3:ReplicateTags",
				"s3:RestoreObject"
			    ],
			    "Resource" : "*",
			    "Effect" : "Allow",
			    "Sid" : "S3AllowDeveloper"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ]
	    }
	},
	"SquidsEFSPolicy" : {
	    "Type" : "AWS::IAM::ManagedPolicy",
	    "Properties" : {
		"ManagedPolicyName" : "SquidsEFSPolicy",
		"PolicyDocument" : {
		    "Version" : "2012-10-17",
		    "Statement" : [
			{
			    "Sid" : "VisualEditor0",
			    "Effect" : "Allow",
			    "Action" : [
				"elasticfilesystem:DescribeMountTargets",
				"elasticfilesystem:CreateMountTarget",
				"elasticfilesystem:CreateFileSystem",
				"elasticfilesystem:DescribeFileSystems",
				"elasticfilesystem:DeleteMountTarget",
				"elasticfilesystem:DeleteFileSystem",
				"elasticfilesystem:CreateTags"
			    ],
			    "Resource" : "*"
			}
		    ]
		},
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ]
	    }
	},
        "SquidsReadOnlyAccess" : {
            "Type" : "AWS::IAM::ManagedPolicy",
            "Properties" : {
                "ManagedPolicyName" : "SquidsReadOnlyAccess",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "VisualEditor0",
                            "Effect" : "Allow",
                            "Action" : [
                                "batch:List*",
                                "batch:Describe*",
                                "cloudformation:Describe*",
                                "cloudformation:Detect*",
                                "cloudformation:Get*",
                                "cloudformation:List*",
                                "cloudformation:Estimate*",
                                "cloudformation:Preview*",
                                "cloudwatch:Describe*",
                                "cloudwatch:Get*",
                                "cloudwatch:List*",
                                "config:Deliver*",
                                "config:Describe*",
                                "config:Get*",
                                "config:List*",
                                "connect:List*",
                                "connect:Describe*",
                                "connect:GetFederationToken",
                                "discovery:Describe*",
                                "discovery:List*",
                                "discovery:Get*",
                                "ec2:Describe*",
                                "ec2:Get*",
                                "ec2:SearchTransitGatewayRoutes",
                                "ec2messages:Get*",
                                "events:Describe*",
                                "events:List*",
                                "events:Test*",
                                "health:Describe*",
                                "health:Get*",
                                "health:List*",
                                "iam:Generate*",
                                "iam:Get*",
                                "iam:List*",
                                "iam:Simulate*",
                                "inspector:Describe*",
                                "inspector:Get*",
                                "inspector:List*",
                                "inspector:Preview*",
                                "inspector:LocalizeText",
                                "lambda:List*",
                                "lambda:Get*",
                                "logs:Describe*",
                                "logs:Get*",
                                "logs:FilterLogEvents",
                                "logs:ListTagsLogGroup",
                                "logs:StartQuery",
                                "logs:TestMetricFilter",
                                "rds:Describe*",
                                "rds:List*",
                                "rds:Download*",
                                "redshift:Describe*",
                                "redshift:GetReservedNodeExchangeOfferings",
                                "redshift:View*",
                                "resource-groups:Describe*",
                                "resource-groups:Get*",
                                "resource-groups:List*",
                                "resource-groups:Search*",
                                "route53:Get*",
                                "route53:List*",
                                "route53:Test*",
                                "route53domains:Check*",
                                "route53domains:Get*",
                                "route53domains:List*",
                                "route53domains:View*",
                                "s3:Get*",
                                "s3:List*",
                                "s3:Head*",
                                "secretsmanager:List*",
                                "secretsmanager:Describe*",
                                "secretsmanager:GetResourcePolicy",
                                "securityhub:Get*",
                                "securityhub:List*",
                                "serverlessrepo:List*",
                                "serverlessrepo:Get*",
                                "serverlessrepo:SearchApplications",
                                "servicecatalog:List*",
                                "servicecatalog:Scan*",
                                "servicecatalog:Search*",
                                "servicecatalog:Describe*",
                                "servicediscovery:Get*",
                                "servicediscovery:List*",
                                "states:List*",
                                "states:Describe*",
                                "states:GetExecutionHistory",
                                "storagegateway:Describe*",
                                "storagegateway:List*",
                                "tag:Get*",
                                "transfer:Describe*",
                                "transfer:List*",
                                "transfer:TestIdentityProvider",
                                "transcribe:Get*",
                                "transcribe:List*",
                                "workspaces:Describe*"
                            ],
                            "Resource" : "*"
                        }
                    ]
                },
                "Path" : "/",
                "Roles" : [ { "Ref" : "SquidsEC2Role" } ],
                "Groups" : [ { "Ref" : "SquidsDevelopers" } ]
            }
        },
	"SquidsInstanceProfile" : {
	    "Type" : "AWS::IAM::InstanceProfile",
	    "Properties" : {
		"InstanceProfileName" : "SquidsEC2Role",
		"Path" : "/",
		"Roles" : [ { "Ref" : "SquidsEC2Role" } ]
	    }
	}
    }
}
