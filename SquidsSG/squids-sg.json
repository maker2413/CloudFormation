{
    "Description" : "This template deploys necessary security groups to the specified VPC",
    "Parameters" : {
        "EnvironmentName" : {
            "Description" : "An environment name that will be prefixed to resource names",
            "Type" : "String",
            "Default" : "dev"
        },
        "VPC" : {
            "Description" : "The VPC to deploy SG's into, ignored if PullFromVPC is True",
            "Type" : "String"
        },
        "ProjectTag" : {
            "Type" : "String",
            "Description" : "The project tag for stack resources",
            "Default" : "Squids"
        },
        "PullFromVPC" : {
            "Type" : "String",
            "Description" : "True/False - pull Subnets and tags from the VPC (used in automation, defaults to False)",
            "Default" : "False"
        },
        "VPCStackNameParameter" : {
            "Type" : "String",
            "Description" : "The name of the VPC stack, only required if PullFromVPC is specified"
        },
        "EthanIP" : {
            "Type" : "String",
            "Description" : "The IP of the developer"
        },
        "DustinIP" : {
            "Type" : "String",
            "Description" : "The IP of the developer"
        }
    },
    "Conditions" : {
        "PullFromVPCCond" : {"Fn::Equals" : [{"Ref" : "PullFromVPC"}, "True"]}
    },
    "Mappings" : {
        "CIDRbyName" : {
            "EthanIP"  : { "CIDR" : [{ "Fn::Sub" : "${EthanIP}"  }], "DESC" : "EthanIP" }
            "DustinIP" : { "CIDR" : [{ "Fn::Sub" : "${DustinIP}" }], "DESC" : "DustinIP"}
        }
    },
    "Resources" : {
        "SSH-Client" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Outbound SSH Access",
                "VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond", {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupEgres" : [
                    {
                        "IpProtocol" : "-1",
                        "CidrIp" : "0.0.0.0/0",
                        "Description" : "Outbound Access"
                        "FromPort" : "-1",
                        "ToPort" : "-1"
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref" : "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-SSH-Client"
                        }
                    }
                ]
            }
        }
    	"SSH-Server" : {
    		"Type" : "AWS::EC2::SecurityGroup",
    		"Properties" : {
                "GroupDescription" : "Inbound SSH Access",
    			"VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond", {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "CIDR"]
                        },
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "DESC"]
                        },
                        "FromPort" : "22",
                        "ToPort" : "22"
                    }, {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "CIDR"]
                        }, 
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "DESC"]
                        },
                        "FromPort" : "22",
                        "ToPort" : "22"
                    }, {
                        "IpProtocol" : "tcp",
                        "SourceSecurityGroupId" : {
                            "Ref" : "SSH-Client"
                        },
                        "Description" : {
                            "Fn::Sub" : "${EnvironmentName}-SSH-Client"
                        }
                        "FromPort" : "22",
                        "ToPort" : "22"
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref" : "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-SSH-Server"
                        }
                    }
                ]
    		}
        },
        "EFS-Client" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Outbound EFS Access",
                "VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond", {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupEgres" : [
                    {
                        "IpProtocol" : "-1",
                        "CidrIp" : "0.0.0.0/0",
                        "Description" : "Outbound Access"
                        "FromPort" : "-1",
                        "ToPort" : "-1"
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref" : "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-EFS-Client"
                        }
                    }
                ]
            }
        },
        "EFS-Server" : {
    		"Type" : "AWS::EC2::SecurityGroup",
    		"Properties" : {
                "GroupDescription" : "Inbound EFS Access",
    			"VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond" : {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "SourceSecurityGroupId" : {
                            "Ref" : "EFS-Client"
                        },
                        "Description" : {
                            "Fn::Sub" : "${EnvironmentName}-EFS-Client"
                        },
                        "FromPort" : "2049",
                        "ToPort" : "2049"
                    }
                ],
                "Tags": [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref": "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-EFS-Server"
                        }
                    }
                ]
    		}
    	},
        "Web-Server" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Inbound HTTP and HTTPs Access",
                "VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond" : {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "CidrIp" : "0.0.0.0/0"
                        "Description" : {
                            "Fn::Sub" : "HTTP from all of the Internet"
                        },
                        "FromPort" : "80",
                        "ToPort" : "80"
                    }, {
                        "IpProtocol" : "tcp",
                        "CidrIp" : "0.0.0.0/0"
                        "Description" : {
                            "Fn::Sub" : "HTTPs from all of the Internet"
                        },
                        "FromPort" : "443",
                        "ToPort" : "443"
                    }
                ],
                "Tags": [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref": "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-Web-Server"
                        }
                    }
                ]
            }
        },
        "Jenkins-Client" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Outbound EFS Access",
                "VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond", {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupEgres" : [
                    {
                        "IpProtocol" : "-1",
                        "CidrIp" : "0.0.0.0/0",
                        "Description" : "Outbound Access"
                        "FromPort" : "-1",
                        "ToPort" : "-1"
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref" : "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-Jenkins-Client"
                        }
                    }
                ]
            }
        },
        "Jenkins-Server" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Inbound HTTP and HTTPs Access",
                "VpcId" : {
                    "Fn::If" : [
                        "PullFromVPCCond" : {
                            "Fn::ImportValue" : {
                                "Fn::Sub" : "${VPCStackNameParameter}"
                            }
                        }, {
                            "Ref" : "VPC"
                        }
                    ]
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "CIDR"]
                        },
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "DESC"]
                        },
                        "FromPort" : "8080",
                        "ToPort" : "8080"
                    }, {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "CIDR"]
                        },
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "DESC"]
                        },
                        "FromPort" : "8080",
                        "ToPort" : "8080"
                    }, {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "CIDR"]
                        },
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "EthanIP", "DESC"]
                        },
                        "FromPort" : "8443",
                        "ToPort" : "8443"
                    }, {
                        "IpProtocol" : "tcp",
                        "CidrIp" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "CIDR"]
                        },
                        "Description" : {
                            "Fn::FindInMap" : ["CIDRbyName", "DustinIP", "DESC"]
                        },
                        "FromPort" : "8443",
                        "ToPort" : "8443"
                    }, {
                        "IpProtocol" : "tcp",
                        "SourceSecurityGroupId" : {
                            "Ref" : "Jenkins-Client"
                        },
                        "Description" : {
                            "Fn::Sub" : "${EnvironmentName}-Jenkins-Client"
                        }
                        "FromPort" : "8080",
                        "ToPort" : "8080"
                    }, {
                        "IpProtocol" : "tcp",
                        "SourceSecurityGroupId" : {
                            "Ref" : "Jenkins-Client"
                        },
                        "Description" : {
                            "Fn::Sub" : "${EnvironmentName}-Jenkins-Client"
                        }
                        "FromPort" : "8443",
                        "ToPort" : "8443"
                    }
                ],
                "Tags": [
                    {
                        "Key" : "Project",
                        "Value" : {
                            "Ref": "ProjectTag"
                        }
                    }, {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Sub" : "${EnvironmentName}-Jenkins-Server"
                        }
                    }
                ]
            }
        }
    },
    "Outputs" : {
        "SSH-Client" : {
            "Description" : "Security Group SSH-Client ID",
            "Value" : {
                "Ref" : "SSH-Client"
            }
        },
        "SSH-Server" : {
            "Description" : "Security Group SSH-Server ID",
            "Value" : {
                "Ref" : "SSH-Server"
            }
        },
        "EFS-Client" : {
            "Description" : "Security Group SSH-Client ID",
            "Value" : {
                "Ref" : "SSH-Client"
            }
        },
        "EFS-Client" : {
            "Description" : "Security Group SSH-Client ID",
            "Value" : {
                "Ref" : "SSH-Client"
            }
        },
        "Web-Server" : {
            "Description" : "Security Group Web-Server ID",
            "Value" : {
                "Ref" : "Web-Server"
            }
        },
        "Jenkins-Client" : {
            "Description" : "Security Group Jenkins-Client ID",
            "Value" : {
                "Ref" : "Jenkins-Client"
            }
        },
        "Jenkins-Server" : {
            "Description" : "Security Group Jenkins-Server ID",
            "Value" : {
                "Ref" : "Jenkins-Server"
            }
        }
    }
}
